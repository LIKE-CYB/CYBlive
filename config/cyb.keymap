/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap0: keymap {
        compatible = "zmk,keymap";

        default_layer {
            // --------------------------------------------------------------------------------------------------------------------------------------------------------------
            //  | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |     [    |   ]   |
            //  | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |     '   |  BKSP |
            //  |  SHIFT  |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  | SHIFT |   1   |
            //  |  CTL  |  fn  |  ALT  |           SPACE              |  ALT  |  CTL  |   1   |   1   |
            //  |  1  ||  1  ||  2  |  3  |   4  ||  5  |  6  |  7  ||  8  |  9  |  1  |
            //         |  1  ||  2  |  3  |   4  ||  5  |  6  |  7  ||  8  |  9  |  1  |
            //         |  1  ||  2  |  3  |   4  |      |  6  |      |  8  |  9  |  1  |
            //         |  1  ||  2  |  3  |   4  ||  5  |  6  |  7  ||  8  |  9  |  1  |
            // --------------------------------------------------------------------------------------------------------------------------------------------------------------

            bindings = <
&kp TAB    &kp Q                 &kp W         &kp E    &kp R    &kp T       &kp Y     &kp U      &kp I          &kp O     &kp P     &kp LBKT   &kp RBKT
&kp CLCK   &kp A                 &kp S         &kp D    &kp F    &kp G       &kp H     &kp J      &kp K          &kp L     &kp SEMI  &kp SQT    &kp BSPC
&kp LSHFT  &kp Z                 &kp X         &kp C    &kp V    &kp B       &kp N     &kp M      &kp COMMA      &kp DOT   &kp FSLH  &kp RSHFT  &kp ENTER
&kp LCTRL  &mo 1                 &kp LEFT_ALT                    &kp SPACE                                       &kp RGUI  &kp RALT  &to 1      &kp RCTRL
&to 1      &kp ESC               &kp F1        &kp F2   &kp F3   &kp LWIN    &kp HOME  &kp MINUS  &kp N7         &kp N8    &kp N9
           &kp LS(K_PLAY_PAUSE)  &kp F4        &kp F5   &kp F6   &kp DELETE  &kp END   &kp EQUAL  &kp NUMBER_4   &kp N5    &kp N6
           &kp KP_NUMBER_3       &kp F7        &kp F8   &kp F9               &kp UP               &kp N1         &kp N2    &kp N3
           &kp KP_NUMBER_4       &kp F10       &kp F11  &kp F12  &kp LEFT    &kp DOWN  &kp RIGHT  &kp BACKSLASH  &kp N0    &kp N3
            >;

            // 定义旋钮

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;

            // 定义旋钮
        };

        fn_layer {
            // --------------------------------------------------------------------------------------------------------------------------------------------------------------
            //  | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |     [    |   ]   |
            //  | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |     '   |  BKSP |
            //  |  SHIFT  |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  | SHIFT |   1   |
            //  |  CTL  |  fn  |  ALT  |           SPACE              |  ALT  |  CTL  |   1   |   1   |
            //  |  1  ||  2  ||  2  |  3  |   4  ||  5  |  6  |  7  ||  8  |  9  |  1  |
            //         |  1  ||  2  |  3  |   4  ||  5  |  6  |  7  ||  8  |  9  |  1  |
            //         |  1  ||  2  |  3  |   4  |      |  6  |      |  8  |  9  |  1  |
            //         |  1  ||  2  |  3  |   4  ||  5  |  6  |  7  ||  8  |  9  |  1  |
            // --------------------------------------------------------------------------------------------------------------------------------------------------------------

            bindings = <
&kp TAB    &kp Q              &kp W       &kp E   &kp R   &kp T      &kp Y   &kp U   &kp I      &kp O     &kp P      &kp LBKT   &kp RBKT
&kp CLCK   &kp A              &kp S       &kp D   &kp F   &kp G      &kp H   &kp J   &kp K      &kp L     &kp SEMI   &kp SQT    &kp BSPC
&kp LSHFT  &kp Z              &kp X       &kp C   &kp V   &kp B      &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH   &kp RSHFT  &kp N1
&kp LCTRL  &kp LALT           &kp LALT                    &kp SPACE                             &kp RALT  &kp RCTRL  &to 2      &kp N1
&kp N1     &rgb_ug RGB_TOG    &bt BT_CLR  &kp N3  &kp N4  &kp N5     &kp N6  &kp N7  &kp N8     &kp N9    &kp N1
           &ext_power EP_ON   &kp N2      &kp N3  &kp N4  &kp N5     &kp N6  &kp N7  &kp N8     &kp N9    &kp N1
           &ext_power EP_OFF  &kp N2      &kp N3  &kp N4             &kp N6          &kp N8     &kp N9    &kp N1
           &kp N1             &kp N2      &kp N3  &kp N4  &kp N5     &kp N6  &kp N7  &kp N8     &kp N9    &kp N1
            >;

            // 定义旋钮

            sensor-bindings = <&inc_dec_kp A C>;

            // 定义旋钮
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans                  &trans                          &trans  &trans  &tog 0  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans          &trans          &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
